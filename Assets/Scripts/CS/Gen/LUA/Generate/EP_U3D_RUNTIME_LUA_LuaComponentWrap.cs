//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_RUNTIME_LUA_LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.RUNTIME.LUA.LuaComponent), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetInParent", GetInParent);
		L.RegFunction("Get", Get);
		L.RegFunction("GetInChildren", GetInChildren);
		L.RegFunction("GetsInParent", GetsInParent);
		L.RegFunction("Gets", Gets);
		L.RegFunction("GetsInChildren", GetsInChildren);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Module", get_Module, set_Module);
		L.RegVar("Script", get_Script, set_Script);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInParent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.LuaComponent o = EP.U3D.RUNTIME.LUA.LuaComponent.GetInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				EP.U3D.RUNTIME.LUA.LuaComponent o = EP.U3D.RUNTIME.LUA.LuaComponent.GetInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.LuaComponent.GetInParent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
			EP.U3D.RUNTIME.LUA.LuaComponent o = EP.U3D.RUNTIME.LUA.LuaComponent.Get(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.LuaComponent o = EP.U3D.RUNTIME.LUA.LuaComponent.GetInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				EP.U3D.RUNTIME.LUA.LuaComponent o = EP.U3D.RUNTIME.LUA.LuaComponent.GetInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.LuaComponent.GetInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetsInParent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.LuaComponent[] o = EP.U3D.RUNTIME.LUA.LuaComponent.GetsInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				EP.U3D.RUNTIME.LUA.LuaComponent[] o = EP.U3D.RUNTIME.LUA.LuaComponent.GetsInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.LuaComponent.GetsInParent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Gets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
			LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
			EP.U3D.RUNTIME.LUA.LuaComponent[] o = EP.U3D.RUNTIME.LUA.LuaComponent.Gets(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetsInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.LuaComponent[] o = EP.U3D.RUNTIME.LUA.LuaComponent.GetsInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				EP.U3D.RUNTIME.LUA.LuaComponent[] o = EP.U3D.RUNTIME.LUA.LuaComponent.GetsInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.LuaComponent.GetsInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Module(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.LuaComponent obj = (EP.U3D.RUNTIME.LUA.LuaComponent)o;
			string ret = obj.Module;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Module on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Script(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.LuaComponent obj = (EP.U3D.RUNTIME.LUA.LuaComponent)o;
			string ret = obj.Script;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Script on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Module(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.LuaComponent obj = (EP.U3D.RUNTIME.LUA.LuaComponent)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Module = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Module on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Script(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.LuaComponent obj = (EP.U3D.RUNTIME.LUA.LuaComponent)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Script = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Script on a nil value");
		}
	}
}

