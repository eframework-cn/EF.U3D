//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_LIBRARY_BASE_ConstantsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.LIBRARY.BASE.Constants), typeof(System.Object));
		L.RegFunction("New", _CreateEP_U3D_LIBRARY_BASE_Constants);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UPDATER_PREFAB_PATH", get_UPDATER_PREFAB_PATH, set_UPDATER_PREFAB_PATH);
		L.RegVar("CHECK_MODE", get_CHECK_MODE, set_CHECK_MODE);
		L.RegVar("RELEASE_MODE", get_RELEASE_MODE, set_RELEASE_MODE);
		L.RegVar("LIVE_MODE", get_LIVE_MODE, set_LIVE_MODE);
		L.RegVar("CONN_SERVER_IP", get_CONN_SERVER_IP, set_CONN_SERVER_IP);
		L.RegVar("CONN_SERVER_PORT", get_CONN_SERVER_PORT, set_CONN_SERVER_PORT);
		L.RegVar("CONN_SERVER_UID", get_CONN_SERVER_UID, set_CONN_SERVER_UID);
		L.RegVar("CGI_SERVER_URL", get_CGI_SERVER_URL, set_CGI_SERVER_URL);
		L.RegVar("CGI_ACCESS_TOKEN", get_CGI_ACCESS_TOKEN, set_CGI_ACCESS_TOKEN);
		L.RegVar("BINARY_FILE_URL", get_BINARY_FILE_URL, set_BINARY_FILE_URL);
		L.RegVar("BINARY_FILE_SIZE", get_BINARY_FILE_SIZE, set_BINARY_FILE_SIZE);
		L.RegVar("REPORT_URL", get_REPORT_URL, set_REPORT_URL);
		L.RegVar("SCRIPT_BUNDLE_MODE", get_SCRIPT_BUNDLE_MODE, set_SCRIPT_BUNDLE_MODE);
		L.RegVar("ASSET_BUNDLE_MODE", get_ASSET_BUNDLE_MODE, set_ASSET_BUNDLE_MODE);
		L.RegVar("NEWEST_VERSION", get_NEWEST_VERSION, set_NEWEST_VERSION);
		L.RegVar("LOCAL_VERSION", get_LOCAL_VERSION, set_LOCAL_VERSION);
		L.RegVar("ASSET_BUNDLE_MANIFEST_FILE", get_ASSET_BUNDLE_MANIFEST_FILE, set_ASSET_BUNDLE_MANIFEST_FILE);
		L.RegVar("MANIFEST_FILE", get_MANIFEST_FILE, set_MANIFEST_FILE);
		L.RegVar("ASSET_BUNDLE_FILE_EXTENSION", get_ASSET_BUNDLE_FILE_EXTENSION, null);
		L.RegVar("ILR_BUNDLE_FILE_EXTENSION", get_ILR_BUNDLE_FILE_EXTENSION, null);
		L.RegVar("LUA_BUNDLE_FILE_EXTENSION", get_LUA_BUNDLE_FILE_EXTENSION, null);
		L.RegVar("STREAMING_ASSET_BUNDLE_PATH", get_STREAMING_ASSET_BUNDLE_PATH, set_STREAMING_ASSET_BUNDLE_PATH);
		L.RegVar("STREAMING_SCRIPT_BUNDLE_ROOT", get_STREAMING_SCRIPT_BUNDLE_ROOT, set_STREAMING_SCRIPT_BUNDLE_ROOT);
		L.RegVar("STREAMING_ILR_BUNDLE_PATH", get_STREAMING_ILR_BUNDLE_PATH, set_STREAMING_ILR_BUNDLE_PATH);
		L.RegVar("STREAMING_LUA_BUNDLE_PATH", get_STREAMING_LUA_BUNDLE_PATH, set_STREAMING_LUA_BUNDLE_PATH);
		L.RegVar("LOCAL_ASSET_BUNDLE_PATH", get_LOCAL_ASSET_BUNDLE_PATH, set_LOCAL_ASSET_BUNDLE_PATH);
		L.RegVar("LOCAL_ILR_BUNDLE_PATH", get_LOCAL_ILR_BUNDLE_PATH, set_LOCAL_ILR_BUNDLE_PATH);
		L.RegVar("LOCAL_LUA_BUNDLE_PATH", get_LOCAL_LUA_BUNDLE_PATH, set_LOCAL_LUA_BUNDLE_PATH);
		L.RegVar("REMOTE_ASSET_BUNDLE_PATH", get_REMOTE_ASSET_BUNDLE_PATH, set_REMOTE_ASSET_BUNDLE_PATH);
		L.RegVar("REMOTE_ILR_BUNDLE_PATH", get_REMOTE_ILR_BUNDLE_PATH, set_REMOTE_ILR_BUNDLE_PATH);
		L.RegVar("REMOTE_LUA_BUNDLE_PATH", get_REMOTE_LUA_BUNDLE_PATH, set_REMOTE_LUA_BUNDLE_PATH);
		L.RegVar("REMOTE_FILE_BUNDLE_ROOT", get_REMOTE_FILE_BUNDLE_ROOT, set_REMOTE_FILE_BUNDLE_ROOT);
		L.RegVar("SHARED_AUDIO_PREFAB", get_SHARED_AUDIO_PREFAB, set_SHARED_AUDIO_PREFAB);
		L.RegVar("BUNDLE_PREFAB_PATH", get_BUNDLE_PREFAB_PATH, set_BUNDLE_PREFAB_PATH);
		L.RegVar("PREF_STREAMING_FILE", get_PREF_STREAMING_FILE, null);
		L.RegVar("PLAT_STREAMING_FILE", get_PLAT_STREAMING_FILE, null);
		L.RegVar("PROJ_NAME", get_PROJ_NAME, null);
		L.RegVar("APP_NAME", get_APP_NAME, null);
		L.RegVar("CHANNEL_NAME", get_CHANNEL_NAME, null);
		L.RegVar("JSON_DOMAIN", get_JSON_DOMAIN, null);
		L.RegVar("JSON_URL", get_JSON_URL, null);
		L.RegVar("JSON_DATA", get_JSON_DATA, set_JSON_DATA);
		L.RegVar("CGI_REFRESH_TOKEN", get_CGI_REFRESH_TOKEN, set_CGI_REFRESH_TOKEN);
		L.RegVar("FORCE_UPDATE", get_FORCE_UPDATE, set_FORCE_UPDATE);
		L.RegVar("CHECK_UPDATE", get_CHECK_UPDATE, set_CHECK_UPDATE);
		L.RegVar("UPDATE_WHITELIST", get_UPDATE_WHITELIST, set_UPDATE_WHITELIST);
		L.RegVar("LOG_WHITELIST", get_LOG_WHITELIST, set_LOG_WHITELIST);
		L.RegVar("BINARY_VERSION", get_BINARY_VERSION, null);
		L.RegVar("PATCH_VERSION", get_PATCH_VERSION, set_PATCH_VERSION);
		L.RegVar("DATA_PATH", get_DATA_PATH, null);
		L.RegVar("CONFIG_PATH", get_CONFIG_PATH, null);
		L.RegVar("LOG_PATH", get_LOG_PATH, null);
		L.RegVar("TEMP_PATH", get_TEMP_PATH, null);
		L.RegVar("PROJ_PATH", get_PROJ_PATH, null);
		L.RegVar("DOCS_PATH", get_DOCS_PATH, null);
		L.RegVar("STREAMING_PATH", get_STREAMING_PATH, null);
		L.RegVar("RUNTIME_NAME", get_RUNTIME_NAME, null);
		L.RegVar("DEVICE_ID", get_DEVICE_ID, null);
		L.RegVar("MAC_ADDRESS", get_MAC_ADDRESS, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEP_U3D_LIBRARY_BASE_Constants(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EP.U3D.LIBRARY.BASE.Constants obj = new EP.U3D.LIBRARY.BASE.Constants();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EP.U3D.LIBRARY.BASE.Constants.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UPDATER_PREFAB_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.UPDATER_PREFAB_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CHECK_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.CHECK_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RELEASE_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.RELEASE_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LIVE_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.LIVE_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CONN_SERVER_IP(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_IP);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CONN_SERVER_PORT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_PORT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CONN_SERVER_UID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_UID);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CGI_SERVER_URL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CGI_SERVER_URL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CGI_ACCESS_TOKEN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CGI_ACCESS_TOKEN);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BINARY_FILE_URL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.BINARY_FILE_URL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BINARY_FILE_SIZE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, EP.U3D.LIBRARY.BASE.Constants.BINARY_FILE_SIZE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REPORT_URL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.REPORT_URL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SCRIPT_BUNDLE_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.SCRIPT_BUNDLE_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ASSET_BUNDLE_MODE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.ASSET_BUNDLE_MODE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NEWEST_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.NEWEST_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOCAL_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LOCAL_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ASSET_BUNDLE_MANIFEST_FILE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.ASSET_BUNDLE_MANIFEST_FILE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MANIFEST_FILE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.MANIFEST_FILE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ASSET_BUNDLE_FILE_EXTENSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.ASSET_BUNDLE_FILE_EXTENSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ILR_BUNDLE_FILE_EXTENSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.ILR_BUNDLE_FILE_EXTENSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LUA_BUNDLE_FILE_EXTENSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LUA_BUNDLE_FILE_EXTENSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMING_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.STREAMING_ASSET_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMING_SCRIPT_BUNDLE_ROOT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.STREAMING_SCRIPT_BUNDLE_ROOT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMING_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.STREAMING_ILR_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMING_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.STREAMING_LUA_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOCAL_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LOCAL_ASSET_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOCAL_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LOCAL_ILR_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOCAL_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LOCAL_LUA_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REMOTE_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.REMOTE_ASSET_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REMOTE_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.REMOTE_ILR_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REMOTE_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.REMOTE_LUA_BUNDLE_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REMOTE_FILE_BUNDLE_ROOT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.REMOTE_FILE_BUNDLE_ROOT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SHARED_AUDIO_PREFAB(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.SHARED_AUDIO_PREFAB);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BUNDLE_PREFAB_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.BUNDLE_PREFAB_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PREF_STREAMING_FILE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.PREF_STREAMING_FILE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PLAT_STREAMING_FILE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.PLAT_STREAMING_FILE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PROJ_NAME(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.PROJ_NAME);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_APP_NAME(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.APP_NAME);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CHANNEL_NAME(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CHANNEL_NAME);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JSON_DOMAIN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.JSON_DOMAIN);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JSON_URL(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.JSON_URL);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JSON_DATA(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.JSON_DATA);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CGI_REFRESH_TOKEN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CGI_REFRESH_TOKEN);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FORCE_UPDATE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.FORCE_UPDATE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CHECK_UPDATE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, EP.U3D.LIBRARY.BASE.Constants.CHECK_UPDATE);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UPDATE_WHITELIST(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, EP.U3D.LIBRARY.BASE.Constants.UPDATE_WHITELIST);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOG_WHITELIST(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, EP.U3D.LIBRARY.BASE.Constants.LOG_WHITELIST);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BINARY_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.BINARY_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PATCH_VERSION(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.PATCH_VERSION);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DATA_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.DATA_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CONFIG_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.CONFIG_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LOG_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.LOG_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TEMP_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.TEMP_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PROJ_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.PROJ_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DOCS_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.DOCS_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_STREAMING_PATH(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.STREAMING_PATH);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RUNTIME_NAME(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.RUNTIME_NAME);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DEVICE_ID(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.DEVICE_ID);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAC_ADDRESS(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, EP.U3D.LIBRARY.BASE.Constants.MAC_ADDRESS);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UPDATER_PREFAB_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.UPDATER_PREFAB_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CHECK_MODE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CHECK_MODE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RELEASE_MODE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.RELEASE_MODE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LIVE_MODE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.LIVE_MODE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CONN_SERVER_IP(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_IP = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CONN_SERVER_PORT(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_PORT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CONN_SERVER_UID(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CONN_SERVER_UID = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CGI_SERVER_URL(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CGI_SERVER_URL = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CGI_ACCESS_TOKEN(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CGI_ACCESS_TOKEN = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BINARY_FILE_URL(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.BINARY_FILE_URL = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BINARY_FILE_SIZE(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.BINARY_FILE_SIZE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_REPORT_URL(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.REPORT_URL = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SCRIPT_BUNDLE_MODE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.SCRIPT_BUNDLE_MODE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ASSET_BUNDLE_MODE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.ASSET_BUNDLE_MODE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NEWEST_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.NEWEST_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOCAL_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.LOCAL_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ASSET_BUNDLE_MANIFEST_FILE(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.ASSET_BUNDLE_MANIFEST_FILE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_MANIFEST_FILE(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.MANIFEST_FILE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_STREAMING_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.STREAMING_ASSET_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_STREAMING_SCRIPT_BUNDLE_ROOT(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.STREAMING_SCRIPT_BUNDLE_ROOT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_STREAMING_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.STREAMING_ILR_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_STREAMING_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.STREAMING_LUA_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOCAL_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.LOCAL_ASSET_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOCAL_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.LOCAL_ILR_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOCAL_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.LOCAL_LUA_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_REMOTE_ASSET_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.REMOTE_ASSET_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_REMOTE_ILR_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.REMOTE_ILR_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_REMOTE_LUA_BUNDLE_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.REMOTE_LUA_BUNDLE_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_REMOTE_FILE_BUNDLE_ROOT(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.REMOTE_FILE_BUNDLE_ROOT = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SHARED_AUDIO_PREFAB(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.SHARED_AUDIO_PREFAB = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BUNDLE_PREFAB_PATH(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.BUNDLE_PREFAB_PATH = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_JSON_DATA(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.JSON_DATA = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CGI_REFRESH_TOKEN(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CGI_REFRESH_TOKEN = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FORCE_UPDATE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.FORCE_UPDATE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CHECK_UPDATE(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.CHECK_UPDATE = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UPDATE_WHITELIST(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			EP.U3D.LIBRARY.BASE.Constants.UPDATE_WHITELIST = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LOG_WHITELIST(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<string> arg0 = (System.Collections.Generic.List<string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<string>));
			EP.U3D.LIBRARY.BASE.Constants.LOG_WHITELIST = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PATCH_VERSION(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			EP.U3D.LIBRARY.BASE.Constants.PATCH_VERSION = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

