//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GUISettingsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.GUISettings), typeof(System.Object));
		L.RegFunction("New", _CreateUnityEngine_GUISettings);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("doubleClickSelectsWord", get_doubleClickSelectsWord, set_doubleClickSelectsWord);
		L.RegVar("tripleClickSelectsLine", get_tripleClickSelectsLine, set_tripleClickSelectsLine);
		L.RegVar("cursorColor", get_cursorColor, set_cursorColor);
		L.RegVar("cursorFlashSpeed", get_cursorFlashSpeed, set_cursorFlashSpeed);
		L.RegVar("selectionColor", get_selectionColor, set_selectionColor);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_GUISettings(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.GUISettings obj = new UnityEngine.GUISettings();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.GUISettings.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_doubleClickSelectsWord(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			bool ret = obj.doubleClickSelectsWord;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index doubleClickSelectsWord on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tripleClickSelectsLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			bool ret = obj.tripleClickSelectsLine;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tripleClickSelectsLine on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cursorColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			UnityEngine.Color ret = obj.cursorColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cursorColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cursorFlashSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			float ret = obj.cursorFlashSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cursorFlashSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_selectionColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			UnityEngine.Color ret = obj.selectionColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index selectionColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_doubleClickSelectsWord(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.doubleClickSelectsWord = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index doubleClickSelectsWord on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tripleClickSelectsLine(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.tripleClickSelectsLine = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tripleClickSelectsLine on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cursorColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.cursorColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cursorColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cursorFlashSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.cursorFlashSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cursorFlashSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_selectionColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUISettings obj = (UnityEngine.GUISettings)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.selectionColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index selectionColor on a nil value");
		}
	}
}

