//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_RUNTIME_LUA_SCENE_SceneWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.RUNTIME.LUA.SCENE.Scene), typeof(EP.U3D.LIBRARY.SCENE.Scene));
		L.RegFunction("Name", Name);
		L.RegFunction("Awake", Awake);
		L.RegFunction("Start", Start);
		L.RegFunction("Update", Update);
		L.RegFunction("Stop", Stop);
		L.RegFunction("New", _CreateEP_U3D_RUNTIME_LUA_SCENE_Scene);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("LScene", get_LScene, set_LScene);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEP_U3D_RUNTIME_LUA_SCENE_Scene(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.SCENE.Scene obj = new EP.U3D.RUNTIME.LUA.SCENE.Scene(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EP.U3D.RUNTIME.LUA.SCENE.Scene.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Name(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)ToLua.CheckObject<EP.U3D.RUNTIME.LUA.SCENE.Scene>(L, 1);
			string o = obj.Name();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)ToLua.CheckObject<EP.U3D.RUNTIME.LUA.SCENE.Scene>(L, 1);
			obj.Awake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)ToLua.CheckObject<EP.U3D.RUNTIME.LUA.SCENE.Scene>(L, 1);
			object[] arg0 = ToLua.ToParamsObject(L, 2, count - 1);
			obj.Start(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)ToLua.CheckObject<EP.U3D.RUNTIME.LUA.SCENE.Scene>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)ToLua.CheckObject<EP.U3D.RUNTIME.LUA.SCENE.Scene>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LScene(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)o;
			LuaInterface.LuaTable ret = obj.LScene;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LScene on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LScene(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.RUNTIME.LUA.SCENE.Scene obj = (EP.U3D.RUNTIME.LUA.SCENE.Scene)o;
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			obj.LScene = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LScene on a nil value");
		}
	}
}

