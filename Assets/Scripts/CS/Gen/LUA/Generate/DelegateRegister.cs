//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateRegister
{
	static DelegateRegister register = new DelegateRegister();

	public static void Register()
	{
		DelegateFactory.Dict.Clear();
		DelegateFactory.Dict.Add(typeof(System.Action), register.System_Action);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction), register.UnityEngine_Events_UnityAction);
		DelegateFactory.Dict.Add(typeof(System.Predicate<int>), register.System_Predicate_int);
		DelegateFactory.Dict.Add(typeof(System.Action<int>), register.System_Action_int);
		DelegateFactory.Dict.Add(typeof(System.Comparison<int>), register.System_Comparison_int);
		DelegateFactory.Dict.Add(typeof(EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate), register.EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate);
		DelegateFactory.Dict.Add(typeof(EP.U3D.LIBRARY.EVT.EventHandlerDelegate), register.EP_U3D_LIBRARY_EVT_EventHandlerDelegate);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Camera.CameraCallback), register.UnityEngine_Camera_CameraCallback);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), register.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), register.UnityEngine_Application_LowMemoryCallback);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Application.LogCallback), register.UnityEngine_Application_LogCallback);
		DelegateFactory.Dict.Add(typeof(System.Action<bool>), register.System_Action_bool);
		DelegateFactory.Dict.Add(typeof(System.Action<string>), register.System_Action_string);
		DelegateFactory.Dict.Add(typeof(System.Func<bool>), register.System_Func_bool);
		DelegateFactory.Dict.Add(typeof(System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>), register.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		DelegateFactory.Dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), register.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateFactory.Dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), register.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateFactory.Dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), register.System_Action_UnityEngine_AsyncOperation);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer>), register.UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer);
		DelegateFactory.Dict.Add(typeof(UnityEngine.GUI.WindowFunction), register.UnityEngine_GUI_WindowFunction);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>), register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>), register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>), register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		DelegateFactory.Dict.Add(typeof(System.Action<UnityEngine.Playables.PlayableDirector>), register.System_Action_UnityEngine_Playables_PlayableDirector);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Canvas.WillRenderCanvases), register.UnityEngine_Canvas_WillRenderCanvases);
		DelegateFactory.Dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), register.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<bool>), register.UnityEngine_Events_UnityAction_bool);
		DelegateFactory.Dict.Add(typeof(UnityEngine.UI.InputField.OnValidateInput), register.UnityEngine_UI_InputField_OnValidateInput);
		DelegateFactory.Dict.Add(typeof(UnityEngine.Events.UnityAction<string>), register.UnityEngine_Events_UnityAction_string);
		DelegateFactory.Dict.Add(typeof(System.Action<UnityEngine.SceneManagement.Scene>), register.System_Action_UnityEngine_SceneManagement_Scene);
		DelegateFactory.Dict.Add(typeof(EP.U3D.LIBRARY.ASSET.AssetManager.Callback), register.EP_U3D_LIBRARY_ASSET_AssetManager_Callback);
		DelegateFactory.Dict.Add(typeof(System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer>), register.System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer);
		DelegateFactory.Dict.Add(typeof(System.Action<string,byte[]>), register.System_Action_string_bytes);
		DelegateFactory.Dict.Add(typeof(EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate), register.EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate);
		DelegateFactory.Dict.Add(typeof(System.Action<string,bool>), register.System_Action_string_bool);

		DelegateTraits<System.Action>.Init(register.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(register.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(register.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(register.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(register.System_Comparison_int);
		DelegateTraits<EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate>.Init(register.EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate);
		DelegateTraits<EP.U3D.LIBRARY.EVT.EventHandlerDelegate>.Init(register.EP_U3D_LIBRARY_EVT_EventHandlerDelegate);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(register.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(register.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(register.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(register.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(register.System_Action_bool);
		DelegateTraits<System.Action<string>>.Init(register.System_Action_string);
		DelegateTraits<System.Func<bool>>.Init(register.System_Func_bool);
		DelegateTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(register.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(register.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(register.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(register.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer>>.Init(register.UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer);
		DelegateTraits<UnityEngine.GUI.WindowFunction>.Init(register.UnityEngine_GUI_WindowFunction);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(register.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		DelegateTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(register.System_Action_UnityEngine_Playables_PlayableDirector);
		DelegateTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(register.UnityEngine_Canvas_WillRenderCanvases);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(register.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<UnityEngine.Events.UnityAction<bool>>.Init(register.UnityEngine_Events_UnityAction_bool);
		DelegateTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(register.UnityEngine_UI_InputField_OnValidateInput);
		DelegateTraits<UnityEngine.Events.UnityAction<string>>.Init(register.UnityEngine_Events_UnityAction_string);
		DelegateTraits<System.Action<UnityEngine.SceneManagement.Scene>>.Init(register.System_Action_UnityEngine_SceneManagement_Scene);
		DelegateTraits<EP.U3D.LIBRARY.ASSET.AssetManager.Callback>.Init(register.EP_U3D_LIBRARY_ASSET_AssetManager_Callback);
		DelegateTraits<System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer>>.Init(register.System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer);
		DelegateTraits<System.Action<string,byte[]>>.Init(register.System_Action_string_bytes);
		DelegateTraits<EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate>.Init(register.EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate);
		DelegateTraits<System.Action<string,bool>>.Init(register.System_Action_string_bool);

		TypeTraits<System.Action>.Init(register.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(register.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(register.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(register.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(register.Check_System_Comparison_int);
		TypeTraits<EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate>.Init(register.Check_EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate);
		TypeTraits<EP.U3D.LIBRARY.EVT.EventHandlerDelegate>.Init(register.Check_EP_U3D_LIBRARY_EVT_EventHandlerDelegate);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(register.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(register.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(register.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(register.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(register.Check_System_Action_bool);
		TypeTraits<System.Action<string>>.Init(register.Check_System_Action_string);
		TypeTraits<System.Func<bool>>.Init(register.Check_System_Func_bool);
		TypeTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(register.Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(register.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(register.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(register.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer>>.Init(register.Check_UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer);
		TypeTraits<UnityEngine.GUI.WindowFunction>.Init(register.Check_UnityEngine_GUI_WindowFunction);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(register.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(register.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(register.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		TypeTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(register.Check_System_Action_UnityEngine_Playables_PlayableDirector);
		TypeTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(register.Check_UnityEngine_Canvas_WillRenderCanvases);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(register.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<UnityEngine.Events.UnityAction<bool>>.Init(register.Check_UnityEngine_Events_UnityAction_bool);
		TypeTraits<UnityEngine.UI.InputField.OnValidateInput>.Init(register.Check_UnityEngine_UI_InputField_OnValidateInput);
		TypeTraits<UnityEngine.Events.UnityAction<string>>.Init(register.Check_UnityEngine_Events_UnityAction_string);
		TypeTraits<System.Action<UnityEngine.SceneManagement.Scene>>.Init(register.Check_System_Action_UnityEngine_SceneManagement_Scene);
		TypeTraits<EP.U3D.LIBRARY.ASSET.AssetManager.Callback>.Init(register.Check_EP_U3D_LIBRARY_ASSET_AssetManager_Callback);
		TypeTraits<System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer>>.Init(register.Check_System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer);
		TypeTraits<System.Action<string,byte[]>>.Init(register.Check_System_Action_string_bytes);
		TypeTraits<EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate>.Init(register.Check_EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate);
		TypeTraits<System.Action<string,bool>>.Init(register.Check_System_Action_string_bool);

		StackTraits<System.Action>.Push = register.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = register.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = register.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = register.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = register.Push_System_Comparison_int;
		StackTraits<EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate>.Push = register.Push_EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate;
		StackTraits<EP.U3D.LIBRARY.EVT.EventHandlerDelegate>.Push = register.Push_EP_U3D_LIBRARY_EVT_EventHandlerDelegate;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = register.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = register.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = register.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = register.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = register.Push_System_Action_bool;
		StackTraits<System.Action<string>>.Push = register.Push_System_Action_string;
		StackTraits<System.Func<bool>>.Push = register.Push_System_Func_bool;
		StackTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Push = register.Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = register.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = register.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = register.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer>>.Push = register.Push_UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer;
		StackTraits<UnityEngine.GUI.WindowFunction>.Push = register.Push_UnityEngine_GUI_WindowFunction;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Push = register.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Push = register.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Push = register.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene;
		StackTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Push = register.Push_System_Action_UnityEngine_Playables_PlayableDirector;
		StackTraits<UnityEngine.Canvas.WillRenderCanvases>.Push = register.Push_UnityEngine_Canvas_WillRenderCanvases;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = register.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<UnityEngine.Events.UnityAction<bool>>.Push = register.Push_UnityEngine_Events_UnityAction_bool;
		StackTraits<UnityEngine.UI.InputField.OnValidateInput>.Push = register.Push_UnityEngine_UI_InputField_OnValidateInput;
		StackTraits<UnityEngine.Events.UnityAction<string>>.Push = register.Push_UnityEngine_Events_UnityAction_string;
		StackTraits<System.Action<UnityEngine.SceneManagement.Scene>>.Push = register.Push_System_Action_UnityEngine_SceneManagement_Scene;
		StackTraits<EP.U3D.LIBRARY.ASSET.AssetManager.Callback>.Push = register.Push_EP_U3D_LIBRARY_ASSET_AssetManager_Callback;
		StackTraits<System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer>>.Push = register.Push_System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer;
		StackTraits<System.Action<string,byte[]>>.Push = register.Push_System_Action_string_bytes;
		StackTraits<EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate>.Push = register.Push_EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate;
		StackTraits<System.Action<string,bool>>.Push = register.Push_System_Action_string_bool;
	}
	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event : LuaDelegate
	{
		public EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event(LuaFunction func) : base(func) { }
		public EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(EP.U3D.LIBRARY.NET.NetConnection param0, object param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(EP.U3D.LIBRARY.NET.NetConnection param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate fn = delegate(EP.U3D.LIBRARY.NET.NetConnection param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event target = new EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event(func);
			EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event target = new EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate_Event(func, self);
			EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate), L, pos);
	}

	void Push_EP_U3D_LIBRARY_NET_NetConnection_StatusDelegate(IntPtr L, EP.U3D.LIBRARY.NET.NetConnection.StatusDelegate o)
	{
		ToLua.Push(L, o);
	}

	class EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event : LuaDelegate
	{
		public EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event(LuaFunction func) : base(func) { }
		public EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(EP.U3D.LIBRARY.EVT.Evt param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(EP.U3D.LIBRARY.EVT.Evt param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EP.U3D.LIBRARY.EVT.EventHandlerDelegate EP_U3D_LIBRARY_EVT_EventHandlerDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EP.U3D.LIBRARY.EVT.EventHandlerDelegate fn = delegate(EP.U3D.LIBRARY.EVT.Evt param0) { };
			return fn;
		}

		if(!flag)
		{
			EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event target = new EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event(func);
			EP.U3D.LIBRARY.EVT.EventHandlerDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event target = new EP_U3D_LIBRARY_EVT_EventHandlerDelegate_Event(func, self);
			EP.U3D.LIBRARY.EVT.EventHandlerDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EP_U3D_LIBRARY_EVT_EventHandlerDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EP.U3D.LIBRARY.EVT.EventHandlerDelegate), L, pos);
	}

	void Push_EP_U3D_LIBRARY_EVT_EventHandlerDelegate(IntPtr L, EP.U3D.LIBRARY.EVT.EventHandlerDelegate o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<bool>), L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string>), L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<bool>), L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event : LuaDelegate
	{
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> fn = delegate(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func, self);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>), L, pos);
	}

	void Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SpriteRenderer param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SpriteRenderer param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer> UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer> fn = delegate(UnityEngine.SpriteRenderer param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SpriteRenderer(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SpriteRenderer> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_GUI_WindowFunction_Event : LuaDelegate
	{
		public UnityEngine_GUI_WindowFunction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_GUI_WindowFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.GUI.WindowFunction UnityEngine_GUI_WindowFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.GUI.WindowFunction fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_GUI_WindowFunction_Event target = new UnityEngine_GUI_WindowFunction_Event(func);
			UnityEngine.GUI.WindowFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_GUI_WindowFunction_Event target = new UnityEngine_GUI_WindowFunction_Event(func, self);
			UnityEngine.GUI.WindowFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_GUI_WindowFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.GUI.WindowFunction), L, pos);
	}

	void Push_UnityEngine_GUI_WindowFunction(IntPtr L, UnityEngine.GUI.WindowFunction o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Playables_PlayableDirector_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Playables.PlayableDirector> System_Action_UnityEngine_Playables_PlayableDirector(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Playables.PlayableDirector> fn = delegate(UnityEngine.Playables.PlayableDirector param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func, self);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Playables.PlayableDirector>), L, pos);
	}

	void Push_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, System.Action<UnityEngine.Playables.PlayableDirector> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Canvas_WillRenderCanvases_Event : LuaDelegate
	{
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Canvas.WillRenderCanvases UnityEngine_Canvas_WillRenderCanvases(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Canvas.WillRenderCanvases fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func);
			UnityEngine.Canvas.WillRenderCanvases d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func, self);
			UnityEngine.Canvas.WillRenderCanvases d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Canvas.WillRenderCanvases), L, pos);
	}

	void Push_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, UnityEngine.Canvas.WillRenderCanvases o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_bool_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<bool> UnityEngine_Events_UnityAction_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func);
			UnityEngine.Events.UnityAction<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_bool_Event target = new UnityEngine_Events_UnityAction_bool_Event(func, self);
			UnityEngine.Events.UnityAction<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<bool>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_bool(IntPtr L, UnityEngine.Events.UnityAction<bool> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_UI_InputField_OnValidateInput_Event : LuaDelegate
	{
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func) : base(func) { }
		public UnityEngine_UI_InputField_OnValidateInput_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public char Call(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public char CallWithSelf(string param0, int param1, char param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			char ret = (char)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public UnityEngine.UI.InputField.OnValidateInput UnityEngine_UI_InputField_OnValidateInput(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.UI.InputField.OnValidateInput fn = delegate(string param0, int param1, char param2) { return '\0'; };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func);
			UnityEngine.UI.InputField.OnValidateInput d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_UI_InputField_OnValidateInput_Event target = new UnityEngine_UI_InputField_OnValidateInput_Event(func, self);
			UnityEngine.UI.InputField.OnValidateInput d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.UI.InputField.OnValidateInput), L, pos);
	}

	void Push_UnityEngine_UI_InputField_OnValidateInput(IntPtr L, UnityEngine.UI.InputField.OnValidateInput o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_string_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<string> UnityEngine_Events_UnityAction_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func);
			UnityEngine.Events.UnityAction<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_string_Event target = new UnityEngine_Events_UnityAction_string_Event(func, self);
			UnityEngine.Events.UnityAction<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction<string>), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_string(IntPtr L, UnityEngine.Events.UnityAction<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public System_Action_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.SceneManagement.Scene> System_Action_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_SceneManagement_Scene_Event target = new System_Action_UnityEngine_SceneManagement_Scene_Event(func);
			System.Action<UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_SceneManagement_Scene_Event target = new System_Action_UnityEngine_SceneManagement_Scene_Event(func, self);
			System.Action<UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.SceneManagement.Scene>), L, pos);
	}

	void Push_System_Action_UnityEngine_SceneManagement_Scene(IntPtr L, System.Action<UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event : LuaDelegate
	{
		public EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event(LuaFunction func) : base(func) { }
		public EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public EP.U3D.LIBRARY.ASSET.AssetManager.Callback EP_U3D_LIBRARY_ASSET_AssetManager_Callback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EP.U3D.LIBRARY.ASSET.AssetManager.Callback fn = delegate(UnityEngine.Object param0) { };
			return fn;
		}

		if(!flag)
		{
			EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event target = new EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event(func);
			EP.U3D.LIBRARY.ASSET.AssetManager.Callback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event target = new EP_U3D_LIBRARY_ASSET_AssetManager_Callback_Event(func, self);
			EP.U3D.LIBRARY.ASSET.AssetManager.Callback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EP_U3D_LIBRARY_ASSET_AssetManager_Callback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EP.U3D.LIBRARY.ASSET.AssetManager.Callback), L, pos);
	}

	void Push_EP_U3D_LIBRARY_ASSET_AssetManager_Callback(IntPtr L, EP.U3D.LIBRARY.ASSET.AssetManager.Callback o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event : LuaDelegate
	{
		public System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event(LuaFunction func) : base(func) { }
		public System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public EP.U3D.LIBRARY.POOL.StreamBuffer Call()
		{
			func.BeginPCall();
			func.PCall();
			EP.U3D.LIBRARY.POOL.StreamBuffer ret = (EP.U3D.LIBRARY.POOL.StreamBuffer)func.CheckObject(typeof(EP.U3D.LIBRARY.POOL.StreamBuffer));
			func.EndPCall();
			return ret;
		}

		public EP.U3D.LIBRARY.POOL.StreamBuffer CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			EP.U3D.LIBRARY.POOL.StreamBuffer ret = (EP.U3D.LIBRARY.POOL.StreamBuffer)func.CheckObject(typeof(EP.U3D.LIBRARY.POOL.StreamBuffer));
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer> System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event target = new System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event(func);
			System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event target = new System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer_Event(func, self);
			System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer>), L, pos);
	}

	void Push_System_Func_EP_U3D_LIBRARY_POOL_StreamBuffer(IntPtr L, System.Func<EP.U3D.LIBRARY.POOL.StreamBuffer> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_bytes_Event : LuaDelegate
	{
		public System_Action_string_bytes_Event(LuaFunction func) : base(func) { }
		public System_Action_string_bytes_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, byte[] param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, byte[] param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,byte[]> System_Action_string_bytes(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,byte[]> fn = delegate(string param0, byte[] param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_bytes_Event target = new System_Action_string_bytes_Event(func);
			System.Action<string,byte[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_bytes_Event target = new System_Action_string_bytes_Event(func, self);
			System.Action<string,byte[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_bytes(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,byte[]>), L, pos);
	}

	void Push_System_Action_string_bytes(IntPtr L, System.Action<string,byte[]> o)
	{
		ToLua.Push(L, o);
	}

	class EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event : LuaDelegate
	{
		public EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event(LuaFunction func) : base(func) { }
		public EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(EP.U3D.LIBRARY.SCENE.IScene param0, EP.U3D.LIBRARY.SCENE.IScene param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(EP.U3D.LIBRARY.SCENE.IScene param0, EP.U3D.LIBRARY.SCENE.IScene param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate fn = delegate(EP.U3D.LIBRARY.SCENE.IScene param0, EP.U3D.LIBRARY.SCENE.IScene param1) { };
			return fn;
		}

		if(!flag)
		{
			EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event target = new EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event(func);
			EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event target = new EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate_Event(func, self);
			EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate), L, pos);
	}

	void Push_EP_U3D_LIBRARY_SCENE_SceneManager_SwapDelegate(IntPtr L, EP.U3D.LIBRARY.SCENE.SceneManager.SwapDelegate o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_bool_Event : LuaDelegate
	{
		public System_Action_string_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_string_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,bool> System_Action_string_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,bool> fn = delegate(string param0, bool param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_bool_Event target = new System_Action_string_bool_Event(func);
			System.Action<string,bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_bool_Event target = new System_Action_string_bool_Event(func, self);
			System.Action<string,bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<string,bool>), L, pos);
	}

	void Push_System_Action_string_bool(IntPtr L, System.Action<string,bool> o)
	{
		ToLua.Push(L, o);
	}

}

