//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_LIBRARY_UI_UIWindowWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.LIBRARY.UI.UIWindow), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Meta", Meta);
		L.RegFunction("Panel", Panel);
		L.RegFunction("OnOpen", OnOpen);
		L.RegFunction("OnBlur", OnBlur);
		L.RegFunction("OnFocus", OnFocus);
		L.RegFunction("OnClose", OnClose);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Meta(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
				EP.U3D.LIBRARY.UI.UIMeta o = obj.Meta();
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2)
			{
				EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
				EP.U3D.LIBRARY.UI.UIMeta arg0 = (EP.U3D.LIBRARY.UI.UIMeta)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIMeta>(L, 2);
				EP.U3D.LIBRARY.UI.UIMeta o = obj.Meta(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.UI.UIWindow.Meta");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Panel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
				UnityEngine.Canvas o = obj.Panel();
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2)
			{
				EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
				UnityEngine.Canvas arg0 = (UnityEngine.Canvas)ToLua.CheckObject(L, 2, typeof(UnityEngine.Canvas));
				UnityEngine.Canvas o = obj.Panel(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.UI.UIWindow.Panel");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnOpen(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
			object[] arg0 = ToLua.ToParamsObject(L, 2, count - 1);
			obj.OnOpen(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBlur(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
			obj.OnBlur();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFocus(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
			obj.OnFocus();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EP.U3D.LIBRARY.UI.UIWindow obj = (EP.U3D.LIBRARY.UI.UIWindow)ToLua.CheckObject<EP.U3D.LIBRARY.UI.UIWindow>(L, 1);
			System.Action arg0 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 2);
			obj.OnClose(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

