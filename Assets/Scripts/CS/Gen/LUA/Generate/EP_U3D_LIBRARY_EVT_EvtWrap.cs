//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_LIBRARY_EVT_EvtWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.LIBRARY.EVT.Evt), typeof(System.Object));
		L.RegFunction("Reset", Reset);
		L.RegFunction("Clone", Clone);
		L.RegFunction("Obtain", Obtain);
		L.RegFunction("Get", Get);
		L.RegFunction("Put", Put);
		L.RegFunction("New", _CreateEP_U3D_LIBRARY_EVT_Evt);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("ID", get_ID, set_ID);
		L.RegVar("Param", get_Param, set_Param);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEP_U3D_LIBRARY_EVT_Evt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EP.U3D.LIBRARY.EVT.Evt obj = new EP.U3D.LIBRARY.EVT.Evt();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EP.U3D.LIBRARY.EVT.Evt.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)ToLua.CheckObject<EP.U3D.LIBRARY.EVT.Evt>(L, 1);
			obj.Reset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)ToLua.CheckObject<EP.U3D.LIBRARY.EVT.Evt>(L, 1);
			EP.U3D.LIBRARY.EVT.Evt o = obj.Clone();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Obtain(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)ToLua.CheckObject<EP.U3D.LIBRARY.EVT.Evt>(L, 1);
				bool o = obj.Obtain();
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2)
			{
				EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)ToLua.CheckObject<EP.U3D.LIBRARY.EVT.Evt>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				bool o = obj.Obtain(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.EVT.Evt.Obtain");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Get(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<object>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				EP.U3D.LIBRARY.EVT.Evt o = EP.U3D.LIBRARY.EVT.Evt.Get(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (TypeChecker.CheckTypes<int>(L, 1) && TypeChecker.CheckParamsType<object>(L, 2, count - 1))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				object[] arg1 = ToLua.ToParamsObject(L, 2, count - 1);
				EP.U3D.LIBRARY.EVT.Evt o = EP.U3D.LIBRARY.EVT.Evt.Get(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.EVT.Evt.Get");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Put(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EP.U3D.LIBRARY.EVT.Evt arg0 = (EP.U3D.LIBRARY.EVT.Evt)ToLua.CheckObject<EP.U3D.LIBRARY.EVT.Evt>(L, 1);
			EP.U3D.LIBRARY.EVT.Evt.Put(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)o;
			int ret = obj.ID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Param(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)o;
			object ret = obj.Param;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Param on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Param(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.EVT.Evt obj = (EP.U3D.LIBRARY.EVT.Evt)o;
			object arg0 = ToLua.ToVarObject(L, 2);
			obj.Param = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Param on a nil value");
		}
	}
}

