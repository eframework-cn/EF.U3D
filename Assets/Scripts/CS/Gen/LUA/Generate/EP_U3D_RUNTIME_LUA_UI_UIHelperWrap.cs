//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_RUNTIME_LUA_UI_UIHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.RUNTIME.LUA.UI.UIHelper), typeof(EP.U3D.LIBRARY.UI.UIHelper));
		L.RegFunction("SetButtonEvent", SetButtonEvent);
		L.RegFunction("GetComponentInParent", GetComponentInParent);
		L.RegFunction("GetComponent", GetComponent);
		L.RegFunction("GetComponentInChildren", GetComponentInChildren);
		L.RegFunction("GetComponentsInParent", GetComponentsInParent);
		L.RegFunction("GetComponents", GetComponents);
		L.RegFunction("GetComponentsInChildren", GetComponentsInChildren);
		L.RegFunction("AddComponent", AddComponent);
		L.RegFunction("RemoveComponent", RemoveComponent);
		L.RegFunction("SetComponentEnabled", SetComponentEnabled);
		L.RegFunction("New", _CreateEP_U3D_RUNTIME_LUA_UI_UIHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEP_U3D_RUNTIME_LUA_UI_UIHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EP.U3D.RUNTIME.LUA.UI.UIHelper obj = new EP.U3D.RUNTIME.LUA.UI.UIHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EP.U3D.RUNTIME.LUA.UI.UIHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetButtonEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.SetButtonEvent(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaFunction, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaFunction arg1 = ToLua.ToLuaFunction(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.SetButtonEvent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaFunction>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.SetButtonEvent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaFunction arg2 = ToLua.CheckLuaFunction(L, 3);
				LuaTable arg3 = ToLua.CheckLuaTable(L, 4);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.SetButtonEvent(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.SetButtonEvent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInParent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInParent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInParent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInParent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponents(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponents(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponents(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponents(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponents(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponents");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponentsInChildren(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object[] o = EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.GetComponentsInChildren");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.AddComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.AddComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.AddComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.AddComponent(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.AddComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, LuaInterface.LuaTable>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string, System.Type>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.ToString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent(arg0, arg1, arg2, arg3);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.RemoveComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetComponentEnabled(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				LuaTable arg1 = ToLua.ToLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.SetComponentEnabled(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type, bool>(L, 2))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.SetComponentEnabled(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaTable, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				LuaTable arg2 = ToLua.ToLuaTable(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				LuaInterface.LuaTable o = EP.U3D.RUNTIME.LUA.UI.UIHelper.SetComponentEnabled(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes<System.Type, bool>(L, 3))
			{
				UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				object o = EP.U3D.RUNTIME.LUA.UI.UIHelper.SetComponentEnabled(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.RUNTIME.LUA.UI.UIHelper.SetComponentEnabled");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

