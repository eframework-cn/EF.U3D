//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EP_U3D_LIBRARY_ASSET_AssetManager_BundleInfoWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo), typeof(System.Object));
		L.RegFunction("Ref", Ref);
		L.RegFunction("Unref", Unref);
		L.RegFunction("New", _CreateEP_U3D_LIBRARY_ASSET_AssetManager_BundleInfo);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Name", get_Name, set_Name);
		L.RegVar("Bundle", get_Bundle, set_Bundle);
		L.RegVar("RefCount", get_RefCount, set_RefCount);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEP_U3D_LIBRARY_ASSET_AssetManager_BundleInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = new EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Ref(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)ToLua.CheckObject<EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo>(L, 1);
				int o = obj.Ref();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2)
			{
				EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)ToLua.CheckObject<EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int o = obj.Ref(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo.Ref");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Unref(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)ToLua.CheckObject<EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo>(L, 1);
				int o = obj.Unref();
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2)
			{
				EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)ToLua.CheckObject<EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int o = obj.Unref(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo.Unref");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			UnityEngine.AssetBundle ret = obj.Bundle;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Bundle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RefCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			int ret = obj.RefCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RefCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Bundle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			UnityEngine.AssetBundle arg0 = (UnityEngine.AssetBundle)ToLua.CheckObject<UnityEngine.AssetBundle>(L, 2);
			obj.Bundle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Bundle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RefCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo obj = (EP.U3D.LIBRARY.ASSET.AssetManager.BundleInfo)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.RefCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RefCount on a nil value");
		}
	}
}

